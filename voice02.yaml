# substitutions:
#   awake_video: "media-source://media_source/local/assist_responses/ru/awake.mp4"
#   speech_video: "media-source://media_source/local/assist_responses/ru/no_sound_speech.mp4" 
#   external_media_player_audio: "media_player.0a83135f_375bce0a"
#   external_media_player_video: "media_player.0a83135f_375bce0a"
#   #display_switch: "switch.ha_display_ecran"

esphome:
  name: "voice02"
  friendly_name: voice02
  comment: M5Stack Atom Echo
  name_add_mac_suffix: false
  project:
    name: m5stack.atom-echo-voice-assistant
    version: "1.0"
  min_version: 2023.11.0b5

esp32:
  board: m5stack-atom
  framework:
    type: esp-idf

packages:
  wifi: !include common/wifi.yaml
  api: !include common/api.yaml
  #logger: !include common/logger.yaml
  ota: !include common/ota.yaml

dashboard_import:
  package_import_url: github://esphome/firmware/voice-assistant/m5stack-atom-echo.yaml@main

logger:

improv_serial:

i2s_audio:
  i2s_lrclk_pin: GPIO33
  i2s_bclk_pin: GPIO19

microphone:
  - platform: i2s_audio
    id: echo_microphone
    i2s_din_pin: GPIO23
    adc_type: external
    pdm: true
rtttl:
  speaker: echo_speaker
  id: rtttl_speaker

speaker:
  - platform: i2s_audio
    id: echo_speaker
    i2s_dout_pin: GPIO22
    dac_type: external
    mode: mono

voice_assistant:
  id: va
  microphone: echo_microphone
  speaker: echo_speaker
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  vad_threshold: 3
  use_wake_word: true

  # on_tts_end: 
  #   - delay: 200ms
  #   - light.turn_on:
  #       id: led
  #       blue: 0%
  #       red: 0%
  #       green: 100%
  #       brightness: 60%
  #       effect: none
  #   - delay: 200ms
  #   - homeassistant.service:        
  #       service: media_player.turn_off
  #       data:
  #         entity_id: ${external_media_player_video}
  #   - delay: 200ms
  #   - homeassistant.service:        
  #       service: media_player.play_media
  #       data:
  #         entity_id: ${external_media_player_video}
  #         media_content_id: ${speech_video}
  #         media_content_type: video/mp4    
  #   - delay: 600ms
    # - homeassistant.service:        
    #     service: media_player.play_media
    #     data:
    #       entity_id: ${external_media_player_audio}
    #       media_content_id: !lambda return x;
    #       media_content_type: audio/mpeg 

  # on_tts_stream_end:
  #   - delay: 800ms
  #   - homeassistant.service:        
  #       service: media_player.turn_off
  #       data:
  #         entity_id: ${external_media_player_video}

#  on_wake_word_detected:
 
  #   # - switch.turn_off: use_wake_word
  #   - delay: 100ms
  #   - homeassistant.service:        
  #       service: media_player.play_media
  #       data:
  #         entity_id: ${external_media_player_video}
  #         media_content_id: ${awake_video}
  #         media_content_type: video/mp4
  #   - delay: 3s        
  #   # - voice_assistant.start
  # on_wake_word_detected:
  #   - switch.turn_off: use_wake_word
  #   - delay: 100ms
  #   - rtttl.play: "two_short:d=4,o=5,b=100:16e6"
  #   - voice_assistant.start

  on_listening:
    - light.turn_on:
        id: led
        blue: 100%
        red: 0%
        green: 0%
        brightness: 100%
        effect: pulse

  on_stt_vad_end:
    - delay: 100ms
    - light.turn_on:
        id: led
        blue: 60%
        red: 0%
        green: 0%
        effect: "Fast Pulse"

  on_tts_start:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 100%
        brightness: 100%
        effect: pulse
  # on_end:
  #   - delay: 100ms
  #   - wait_until:
  #       not:
  #         speaker.is_playing:
  #   - script.execute: reset_led
  #   - delay: 100ms
  #   - homeassistant.service:        
  #       service: media_player.turn_off
  #       data:
  #         entity_id: ${external_media_player_video}

  on_end:
    - delay: 100ms
    - script.execute: reset_led
    # - delay: 100ms
    # - homeassistant.service:        
    #     service: media_player.turn_off
    #     data:
    #       entity_id: ${external_media_player_video}

  on_error:
    - light.turn_on:
        id: led
        blue: 0%
        red: 100%
        green: 0%
        brightness: 100%
        effect: none
    - delay: 1s
    - script.execute: reset_led

  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
          
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: Button
    disabled_by_default: true
    entity_category: diagnostic
    id: echo_button
    on_multi_click:
      - timing:
          - ON for at least 250ms
          - OFF for at least 50ms
        then:
          - if:
              condition:
                switch.is_off: use_wake_word
              then:
                - if:
                    condition: voice_assistant.is_running
                    then:
                      - voice_assistant.stop:
                      - script.execute: reset_led
                    else:
                      - voice_assistant.start:
              else:
                - voice_assistant.stop
                - delay: 1s
                - script.execute: reset_led
                - script.wait: reset_led
                - voice_assistant.start_continuous:
      - timing:
          - ON for at least 10s
        then:
          - button.press: factory_reset_btn

light:
  - platform: esp32_rmt_led_strip
    id: led
    name: None
    disabled_by_default: true
    entity_category: config
    pin: GPIO27
    default_transition_length: 0s
    chipset: SK6812
    num_leds: 1
    rgb_order: grb
    rmt_channel: 0
    effects:
      - pulse:
          transition_length: 250ms
          update_interval: 250ms

script:
  - id: reset_led
    then:
      - if:
          condition:
            - switch.is_on: use_wake_word
            - switch.is_on: use_listen_light
          then:
            - light.turn_on:
                id: led
                blue: 100%
                red: 100%
                green: 0%
                brightness: 100%
                effect: none
          else:
            - light.turn_off: led

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - script.execute: reset_led
  - platform: template
    name: Use Listen Light
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led

# external_components:
#   - source: github://pr#5230
#     components:
#       - esp_adf
#     refresh: 0s
external_components:
  - source: github://kiklhorn/esphome
    components: esp_adf
    refresh: 0s

esp_adf:
