esphome:
  name: voice01
  friendly_name: voice01
  on_boot:
     - priority: -100
       then:
         - wait_until: api.connected
         - delay: 1s
         - if:
             condition:
               switch.is_on: use_wake_word
             then:
               - voice_assistant.start_continuous:

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended

packages:
  wifi: !include common/wifi32.yaml
  api: !include common/api.yaml
  ota: !include common/ota.yaml

# Enable logging
logger:

# Enable Home Assistant API

captive_portal:

i2s_audio:
  - id: i2s_out
    i2s_lrclk_pin: GPIO25 #SPK WS
    i2s_bclk_pin: GPIO26 #SPK SCK
  - id: i2s_in
    i2s_lrclk_pin: GPIO12 #Mic WS
    i2s_bclk_pin: GPIO13 #Mic SCK

microphone:
  - platform: i2s_audio
    i2s_audio_id: i2s_in
    id: echo_microphone
    i2s_din_pin: GPIO21
    adc_type: external
    pdm: false
    # on_data:
    #   - logger.log:
    #       format: "Received %d bytes"
    #       args: ['x.size()']

speaker:
  - platform: i2s_audio
    i2s_audio_id: i2s_out
    id: echo_speaker
    i2s_dout_pin: GPIO27
    dac_type: external
    mode: mono

rtttl:
  speaker: echo_speaker
  id: beep

voice_assistant:
  id: va
  microphone: echo_microphone
  speaker: echo_speaker
  noise_suppression_level: 3
  auto_gain: 31dBFS
  volume_multiplier: 0.3
  vad_threshold: 3
  on_listening:
    - light.turn_on:
        id: led
        blue: 50%
        red: 0%
        green: 0%
        brightness: 50%
        #effect: 'Fast Pulse'
        effect: scan
  on_tts_start:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 50%
        brightness: 50%
        effect: pulse
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: led
        blue: 0%
        red: 100%
        green: 0%
        brightness: 100%
        effect: pulse
    - delay: 1s
    - script.execute: reset_led
    - script.wait: reset_led
    - lambda: |-
        if (code == "wake-provider-missing" || code == "wake-engine-missing") {
          id(use_wake_word).turn_off();
        }
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led
  # on_stt_vad_end:
  #   - light.turn_on:
  #       id: led
  #       blue: 100%
  #       red: 0%
  #       green: 0%
  #       effect: "Fast Pulse"

binary_sensor:
  - platform: status
    id: api_connection
    filters:
      - delayed_on: 1s
    on_press:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - voice_assistant.start_continuous:
    on_release:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - voice_assistant.stop:

light:
  - platform: esp32_rmt_led_strip
    id: led
    name: None
    disabled_by_default: true
    entity_category: config
    pin: GPIO17
    default_transition_length: 0s
    chipset: WS2812
    num_leds: 5
    rgb_order: grb
    rmt_channel: 0
    effects:
      - pulse:
          transition_length: 250ms
          update_interval: 250ms
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
          min_brightness: 20%
          max_brightness: 80%
      - flicker:
      - addressable_flicker:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:

      - addressable_scan:
          move_interval: 100ms
          scan_width: 1
script:
  - id: reset_led
    then:
      - if:
          condition:
            - switch.is_on: use_wake_word
            - switch.is_on: use_listen_light
          then:
            - light.turn_on:
                id: led
                blue: 5%
                red: 5%
                green: 0%
                brightness: 50%
                effect: none
          else:
            - light.turn_off: led

switch:
  - platform: restart
    name: Restart
  - platform: template
    name: test
    id: test
    optimistic: true
    entity_category: config
    on_turn_on:
      - rtttl.play: "error:d=4,o=5,b=240:16d6,16c6,16d6,16c6,16d6,16c6,16d6,16c6"
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - script.execute: reset_led
  - platform: template
    name: Use Listen Light
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led

external_components:
  - source: github://kiklhorn/esphome
    components:
      - esp_adf
    refresh: 0s